/*Wrappers*/

.input-group {
    display: flex;
}

.input {
    width: 100%;
    margin: var(--dimentions-base-small);
}

.input-group>label {
    margin-right: var(--dimentions-base-small);
    margin-left: var(--dimentions-base-small);
}

.input-box {
    max-width: 300px;
    margin: auto;
}

.input-box,
.input {
    display: flex;
    flex-direction: column;
}

.input-box>input .input>input {
    width: 100%;
}


/*Generic*/

input,
select,
textarea {
    border-radius: var(--round-small);
    display: inline-block;
    padding: var(--dimentions-base-small);
    border: solid 1px var(--color-secondary);
}

textarea {
    resize: none;
    min-height: 100px;
}

select:hover,
select:focus {
    filter: brightness(110%);
}

textarea:focus,
input:focus,
select:focus {
    outline: none;
}


/*Select*/

select {
    line-height: 1.5em;
    padding: 0.5em 3.5em 0.5em 1em;
    appearance: none;
    /* Remove default arrow */
    /*background-image: url(...);   /* Add custom arrow */
    background-image: linear-gradient(45deg, transparent 50%, gray 50%), linear-gradient(135deg, gray 50%, transparent 50%), linear-gradient(to right, #ccc, #ccc);
    background-position: calc(100% - 20px) calc(1em + 2px), calc(100% - 15px) calc(1em + 2px), calc(100% - 2.5em) 0.5em;
    background-size: 5px 5px, 5px 5px, 1px 1.5em;
    background-repeat: no-repeat;
}


/*Chips*/

.chip:hover {
    filter: brightness(110%);
}

.chip>input[type=radio],
.chip>input[type=checkbox] {
    display: none;
}

.chip>input[type=radio]~label,
.chip>input[type=checkbox]~label {
    background-color: var(--color-secondary);
    color: var(--color-text-primary-light);
    padding: calc(var(--dimentions-base-small)/2) var(--dimentions-base-small) calc(var(--dimentions-base-small)/2) var(--dimentions-base-small);
    border-radius: 24px;
    margin-right: var(--dimentions-base-small);
    cursor: pointer;
}

.chip>input[type=radio]:checked~label,
.chip>input[type=checkbox]:checked~label {
    background-color: var(--color-accent);
}


/*Buttons*/

.btn {
    text-align: center;
    cursor: pointer;
    min-width: 96px;
    height: var(--dimentions-button-height);
    line-height: var(--dimentions-button-height);
    border: 1px solid var(--color-accent) !important;
    color: var(--color-accent);
    background-color: var(--color-window);
    vertical-align: middle;
    align-items: center;
    text-decoration: none;
}

.btn-small {
    height: var(--dimentions-button-height-small) !important;
    line-height: var(--dimentions-button-height-small) !important;
}

.btn-flat {
    border: 0px !important;
}

.btn-round {
    border-radius: var(--round-normal);
}

.btn-round-extra {
    border-radius: 48px;
}

.btn:hover {
    filter: brightness(90%);
    transition: background-color 0.8s linear;
}

.btn:focus {
    outline: 0;
}

.btn:active {
    filter: brightness(75%);
}

.btn-accent {
    background-color: var(--color-accent) !important;
    color: white;
}

input[type=button],
input[type=reset],
input[type=submit] {
    background-color: #8842d5;
    border: none;
    color: white;
    padding: 18px 36px;
    text-decoration: none;
    cursor: pointer;
}

input:focus,
textarea:focus {
    margin-bottom: -1px;
    margin-top: -1px;
    margin-right: -1px;
    margin-left: -1px;
    border-bottom: solid 2px var(--color-accent);
    border-top: solid 2px var(--color-accent);
    border-right: solid 2px var(--color-accent);
    border-left: solid 2px var(--color-accent);
    transition: border-bottom 0.1s ease-in, margin-bottom 0.1s ease-in, border-right 0.2s ease-in, margin-right 0.2s ease-in, border-top 0.3s ease-in, margin-top 0.3s ease-in, border-left 0.4s ease-in, margin-left 0.4s ease-in;
}

label {
    font-size: 0.8em;
}

.help-text {
    padding: 4px;
    color: #a1a1a1;
    font-size: 0.8em;
}

.input-effect {
    position: relative;
    padding-top: 8px;
}

.input-effect>input+label {
    top: 16px;
    left: 8px;
    position: absolute;
    font-size: 1em;
    color: var(--color-secondary);
    transition: 0.2s ease-in;
}


/*When to move it up*/

.input-effect>input:not(:placeholder-shown)+label,
.input-effect>input:focus+label {
    top: -8px;
    left: 0;
    font-size: 0.8em;
    transition: 0.2s ease-in;
}


/* Color on focus */

.input>input:focus+label {
    color: var(--color-accent);
}


/* .input>input[value!=""]:invalid {
    border: solid 2px var(--color-error);
    margin: -1px;
    color: var(--color-error);
}

.input>input[value!=""]:invalid~label,
.input>input[value!=""]:invalid:focus~label {
    color: var(--color-error);
} */


/*Loaders and spinners*/

.progress {
    width: 100%;
    text-align: center;
}

.indeterminate {
    width: 100%;
    height: 4px;
    background: linear-gradient(to right, var(--color-accent), var(--color-accent));
    background-color: #ccc;
    margin: auto;
    border-radius: 4px;
    background-size: 20%;
    background-repeat: repeat-y;
    background-position: -25% 0;
    animation: progress-scroll 1.2s ease-in-out infinite;
}

@keyframes progress-scroll {
    50% {
        background-size: 80%
    }
    100% {
        background-position: 125% 0;
    }
}

.spinner {
    display: inline-block;
    margin: 4px;
    border: 4px solid #ccc;
    border-radius: 50%;
    border-top: 4px solid var(--color-accent);
    width: 48px;
    height: 48px;
    /* Safari */
    animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.context {
    width: 100%;
    background: linear-gradient(to right, #ccc, #e1e1e1, #ccc);
    background-color: #ccc;
    margin: 4px;
    background-size: 10%;
    background-repeat: repeat-y;
    background-position: -50% 0;
    animation: progress-scroll 1s ease-in-out infinite;
}

.context-line {
    height: 8px;
}

.context-title {
    height: 12px;
    background: linear-gradient(to right, #b1b1b1, #e1e1e1, #b1b1b1);
    background-color: #b1b1b1;
}

.context-bg {
    height: 100px;
}